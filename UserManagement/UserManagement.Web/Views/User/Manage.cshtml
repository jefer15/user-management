@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <title>Gestionar Usuarios</title>
    <style>
        body {
            font-family: "Segoe UI", Arial, sans-serif;
            background: #f5f7fa;
            margin: 0;
            padding: 2rem;
        }
        h2 {
            text-align: center;
            color: #0078D7;
            margin-bottom: 1.5rem;
        }
        table {
            width: 90%;
            margin: 0 auto;
            border-collapse: collapse;
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 3px 15px rgba(0,0,0,0.1);
        }
        th, td {
            padding: 12px 15px;
            border-bottom: 1px solid #eee;
            text-align: center;
        }
        th {
            background: #0078D7;
            color: white;
        }
        tr:hover td {
            background: #f0f8ff;
        }
        button {
            padding: 6px 12px;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            color: white;
            transition: 0.3s;
        }
        button:nth-child(1) {
            background-color: #FFA500;
        }
        button:nth-child(1):hover {
            background-color: #cc8400;
        }
        button:nth-child(2) {
            background-color: #DC143C;
        }
        button:nth-child(2):hover {
            background-color: #a50f2b;
        }
        .top-actions {
            text-align: center;
            margin-bottom: 1.5rem;
        }
        .top-actions a {
            text-decoration: none;
            background-color: #0078D7;
            color: white;
            padding: 10px 16px;
            border-radius: 8px;
            font-weight: 500;
            transition: 0.3s;
        }
        .top-actions a:hover {
            background-color: #005fa3;
        }
    </style>
</head>
<body>
    <div class="top-actions">
        <a href="/User/Create">+ Nuevo Usuario</a>
    </div>

    <h2>Usuarios Registrados</h2>
    <table id="tableUsers">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Fecha Nacimiento</th>
                <th>Sexo</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <script>
        const apiBase = 'http://localhost:8080/api/users';

        async function loadUsers() {
            const res = await fetch(apiBase);
            const users = await res.json();
            const tbody = document.querySelector('#tableUsers tbody');
            tbody.innerHTML = '';

            if (users.length === 0) {
                tbody.innerHTML = '<tr><td colspan="5">No hay usuarios registrados.</td></tr>';
                return;
            }

            users.forEach(u => {
                const genderText = u.gender === "M" ? "Masculino" : u.gender === "F" ? "Femenino" : "No especificado";
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${u.id}</td>
                    <td contenteditable="false">${u.name}</td>
                    <td>${new Date(u.birthDate).toISOString().split('T')[0]}</td>
                    <td>${genderText}</td>
                    <td>
                        <button onclick="editUser(${u.id}, this)">Editar</button>
                        <button onclick="deleteUser(${u.id})">Eliminar</button>
                    </td>`;
                tbody.appendChild(tr);
            });
        }

        async function editUser(id, btn) {
            const tr = btn.closest('tr');
            const nameCell = tr.children[1];

            if (btn.textContent === 'Editar') {
                nameCell.contentEditable = "true";
                nameCell.focus();
                nameCell.style.backgroundColor = "#fff8e1";
                btn.textContent = 'Guardar';
                return;
            }

            const name = nameCell.innerText.trim();
            const birthDate = tr.children[2].innerText;
            const gender = tr.children[3].innerText;

            const payload = { id, name, birthDate, gender };
            const res = await fetch(`${apiBase}/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            });

            if (res.ok) {
                nameCell.contentEditable = "false";
                nameCell.style.backgroundColor = "";
                btn.textContent = 'Editar';
                alert('✅ Usuario actualizado correctamente');
            } else {
                alert('❌ Error al actualizar el usuario');
            }
        }

        async function deleteUser(id) {
            if (!confirm('¿Eliminar este usuario?')) return;
            const res = await fetch(`${apiBase}/${id}`, { method: 'DELETE' });
            if (res.ok) loadUsers();
            else alert('❌ Error al eliminar el usuario');
        }

        loadUsers();
    </script>
</body>
</html>
